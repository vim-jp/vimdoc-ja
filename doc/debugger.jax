*debugger.txt*  For Vim バージョン 9.1.  Last change: 2025 Oct 12


		VIMリファレンスマニュアル    by Gordon Prieur


デバッガ支援機能					*debugger-support*

これらの機能はデバッガ、統合プログラミング環境(IPE)、統合開発環境(IDE)との統合
のためのものである。Vim の端末ウィンドウ内で動作するデバッガについては
|terminal-debugger| を参照。

1. デバッガ機能			|debugger-features|
2. Vimのコンパイルオプション	|debugger-compilation|


==============================================================================
1. デバッガ機能						*debugger-features*

以下の機能が利用できる:

	もう1つのコマンド入力				|alt-input|
	デバッグ目印					|debug-signs|
	デバッグソースコード強調			|debug-highlight|
	メッセージフッター				|gui-footer|
	バルーンウィンドウ				|balloon-eval|

これらの機能はMotifバージョンのgvimで使うために特別に追加された。しかしなが
ら、|alt-input| と |debug-highlight|はvimとgvimでも使用できるように書かれてい
る。その他の機能は非GUIバージョンのVimでもわずかな変更で使うことができる。だ
が、著者はそのような変更をしていないし、Motif GUIではないバージョンのVimではテ
ストしていない。


1.1 もう1つのコマンド入力				*alt-input*

Vimがデバッガと協調動作するには、最低限デバッガや外部ツールからの入力のための
接続が必要である。多くの場合は出力のための接続も必要であるがこれは絶対に必要と
いうわけではない。

外部デバッガがVimにコマンドを送ることが入力接続の目的である。デバッガから送ら
れるコマンドは現在のデバッグ環境や状態を表示するために充分である必要がある。

現在の実装はXツールキット(X Toolkit)の発送ループとXtAddInput()ファンクション
コールを基本にしている。


1.2 デバッグ目印					*debug-signs*

多くのデバッガは小さな目印を表示したりその行を色で強調することで特定の行に印を
付ける。デバッガは|:sign|コマンドを使って(Vimに)グラフィカルな目印を設定させる
ことができる。この機能の使われ方の一例は、デバッグしているプログラムの実行位置
(プログラムカウンタ:PC)を表示するのにデバッガが表示する矢印に見る事ができる。
別の例ではブレークポイントを示す小さな停止記号がある。これらの視覚的な強調は
ユーザーがデバッガ状態の経過を追う助けになる。

この機能はデバッガ以外の用途にも使用できる。IPEはビルドエラー、検索したテキス
ト、その他を強調するのに何かしらの目印を使用する。この機能は印がより高い視認性
を確保するために|debug-highlight|と一緒に利用できる。

デバッグ目印は|:sign|コマンドを使って定義、設置する。


1.3 デバッグソースコード強調				*debug-highlight*

この機能により行に優れた強調を施すことができる。これは特定の行を目立たせること
を目的としている。この強調はvimとgvim両方で動作させることができ、gvimに限り多
くの場合デバッグ目印と一緒に使うことができる。唯一の例外はSun Microsystemの
dttermである。dttermには目印を表示するためのスペースがある。{訳注: なので、こ
れを利用する際はコンソールvimでも目印を利用可能となる}


1.4 メッセージフッター					*gui-footer*

メッセージフッターはデバッガやIPEからのメッセージを表示するのに使用する。また
メニューやツールバーのtips(一言ヒント)を表示するのにも使用できる。GUIウィンド
ウの下のフッターエリアは、Exコマンドを表示する行のさらに下に位置する。

フッターエリアの表示・非表示は 'guioptions' の 'F' フラグで制御する。


1.5 バルーンウィンドウ					*balloon-eval*

この機能はデバッガや外部ツールに、マウスが指す位置に応じた動的な情報を表示する
機能を提供する。この機能は「Sun's Visual WorkShop」のデバッガに式の評価結果を
表示させることを目的とした。しかしながら、その他の情報を表示するのに利用できる
よう、可能な限り一般的な様式で実現されている。ただし、機能は制限されている。高
度なポップアップについては |popup-window| を参照。

バルーンウィンドウを使うもう1つの方法は、オプション 'balloonexpr' を使うことで
ある。これは完全にユーザーが定義できる。

バルーンウィンドウには幾つかの設定可能なパラメーターがある。Motifではフォント
リストと色はXリソース経由で設定される(XmNballoonEvalFontList,
XmNballoonEvalBackground, XmNballoonEvalForeground)。
オプション 'balloondelay' はバルーンを表示するまでの遅延時間を設定する。
この機能を有効にするにはオプション 'ballooneval' や 'balloonevalterm' をオンに
する必要がある。

バルーンウィンドウは GUI の場合 |+balloon_eval| 機能付きでコンパイルした時のみ
利用できる。端末の場合 |+balloon_eval_term| 機能が必要である。

バルーンウィンドウ関数はツールバーのツールチップを表示する際にも利用されてい
る。これにはオプション 'ballooneval' を設定する必要はない。しかしその他の設定
はこのツールチップにも適用される。

==============================================================================
2. Vimのコンパイルオプション				*debugger-compilation*

デバッガ機能はSunの「Visual WorkShop Integrated Programming Environment」(ipe)
と一緒に使うために加えられた。しかし、それらの機能は他のデバッガも一部もしくは
全部を使うことができるように、可能な限り一般的な様式で実現されている。

以下のコンパイル時のプリプロセッサー変数で機能の有無効を制御する:

    もう1つのコマンド入力			ALT_X_INPUT
    デバッグ目印				FEAT_SIGNS
    デバッグソースコード強調			FEAT_SIGNS
    メッセージフッター				FEAT_FOOTER
    バルーンウィンドウ				FEAT_BEVAL

Sun Visual WorkShop は既に存在しないため、この製品特有のサポートは削除された。

SunのNetBeansのサポートについては|netbeans|を参照。

 vim:tw=78:sw=4:ts=8:noet:ft=help:norl:
