*os_mac.txt*    For Vim バージョン 9.1.  Last change: 2025 Aug 10


		  VIMリファレンスマニュアル    by Bram Moolenaar


					*mac* *Mac* *macintosh* *Macintosh*

このファイルには、Macintosh 版 Vim の特殊性が記述されている。

NOTE: このファイルは少し古くなっている。ここにより役立つ情報が見つかるかもしれ
ない:
	http://macvim.org/

1. ファイル名の規則		|mac-filename|
2. .vimrc と .vim ファイル	|mac-vimfile|
3. 標準のマップ			|mac-standard-mappings|
4. FAQ				|mac-faq|
5. 知られている不足事項		|mac-lack|
6. Mac バグレポート		|mac-bug|
7. Vim のコンパイル		|mac-compile|
8. Darwin 機能			|mac-darwin-feature|

Vim のバージョン 3.0 には Mac 移植版があった。以下は古いファイルの最初の数行で
ある:

VIM Release Notes
Initial Macintosh release, VIM version 3.0
19 October 1994

Eric Fischer
<enf1@midway.uchicago.edu>, <eric@jcp.uchicago.edu>, <etaoin@uchicago.edu>
5759 N. Guilford Ave
Indianapolis IN 46220 USA

==============================================================================
1. ファイル名の規則						*mac-filename*

Vim バージョン 7 以降では、Vim で Unix パス区切り文字をそのまま使用できる。指
定されたファイル名がカレントフォルダに対する相対パスか絶対パス (つまり、
"Desktop" に対して相対的) であるかを判断するために、次のアルゴリズムが使用され
る:

	パスが "/" で始まる場合は、絶対パス
	パスが ":" で始まる場合は、相対パス
	パスが "/" でも ":" でも始まらず、"/" より前に ":" が見つかった場合は、
	  絶対パス
>
		:e /HD/text
		:e HD:text
<	ディスク "HD" のファイル "text" を編集。 >
		:e :src:main.c
		:e src/main.c
<	カレントフォルダのフォルダ "src" 内のファイル "main.c" を編集。 >
		e os_mac.c
<	カレントフォルダのファイル "os_mac.c" を編集。

|$VIM| および |$VIMRUNTIME| 変数を使用できる。 >

		so $VIMRUNTIME:syntax:syntax.vim

==============================================================================
2. .vimrc と .vim ファイル				*mac-vimfile*

Vim script には Unix スタイルの行区切りを使用することが推奨されており、単一の
改行文字 (LF) を使用する。

Vim を起動すると $VIMRUNTIME/macmap.vim スクリプトが読み込まれ、デフォルトのコ
マンドキーのマップが定義される。

古いシステムでは、ドット "." で始まるファイルは推奨されていない。そのため、rc
ファイルの名前は "vimrc" または "_vimrc"、"gvimrc" または "_gvimrc" になる。こ
れらのファイルは任意のフォーマット (mac, dos, unix) にすることができる。
'nocompatible' オプションが設定されている場合は、Vim は任意のファイル形式を扱
えるが、それ以外の場合は mac 形式のファイルのみを扱う。

==============================================================================
3. 標準のマップ					*mac-standard-mappings*

クリップボードから/クリップボードへのカット/コピー/ペーストには、以下のマップ
が使用できる。

キー	    ノーマル	ビジュアル  挿入    説明 ~
Command-v   "*P		"-d"*P      <C-R>*  テキストのペースト		*<D-v>*
Command-c		"*y		    ビジュアルテキストのコピー	*<D-c>*
Command-x		"*d		    ビジュアルテキストのカット	*<D-x>*
Backspace		"*d		    ビジュアルテキストのカット

==============================================================================
4. Mac FAQ						*mac-faq*

インターネット上:  https://github.com/macvim-dev/macvim/wiki/FAQ

Q: Apple ターミナルで非 ASCII 文字を入力できない。
A: [ウィンドウ設定] → [エミュレーション] で「非 ASCII 文字をエスケープする」
  のチェックを外す。

Q: コマンドラインから GUI の Vim を起動するには？
A: Vim.app が /Applications にあると仮定すると:
	open /Applications/Vim.app
   または:
	/Applications/Vim.app/Contents/MacOS/Vim -g  {arguments}

Q: GUI または open から Vim.app を起動するときに、$PATH を適切な値に設定するに
   はどうすればよいか?
A: 以下のトリックはほとんどのシェルで動作する。これを vimrc ファイルに記述す
   る。これは macvim.org で配布されているバイナリに含まれているシステム vimrc
   ファイルに含まれている。 >
	let s:path = system("echo echo VIMPATH'${PATH}' | $SHELL -l")
	let $PATH = matchstr(s:path, 'VIMPATH\zs.\{-}\ze\n')

==============================================================================
5. 知られている不足事項					*mac-lack*

ターミナルでは CTRL-^ は Shift-Control-6 とタイプする必要がある。CTRL-@ は
Shift-Control-2 である。

==============================================================================
6. Mac バグ レポート					*mac-bug*

Mac 版固有のバグや特性の変更を報告する場合は、vim-mac メーリングリスト
|vim-mac| を使用すること。ただし、登録する必要がある。別の方法としては、Vim
github リポジトリに直接問題を報告することもできる:

https://github.com/vim/vim/issues

または、MacVim 固有の問題についてはこちらで報告できる:

https://github.com/macvim-dev/macvim/issues

==============================================================================
7. Vim のコンパイル					*mac-compile*

ソースファイルと一緒にある "src/INSTALLmac.txt" を参照。

==============================================================================
8. Darwin 機能						*mac-darwin-feature*

とても古い Mac でなければ、Darwin とも呼ばれる OS X を使用しているはずである。
Darwin の 1 つ前の OS は Mac OS 9 である。Darwin 機能は Vim が Darwin 特有の資
産を使えるようにする。

この機能によって実現されるものは 2 つある:

- Vim をシステムクリップボードと連携可能にする。
- いくつかのプラットフォーム特有の文字エンコーディングと Vim が認識しているそ
  れらの差分を橋渡しする変換モジュールを Vim に組み入れる。

言うまでもなく、同じデスクトップ環境上で動く他のアプリケーションとうまく連携す
るまともなテキストエディタにとって、この両方は必要不可欠なものである。

Vim は macOS 専用のアプリケーションではないので、他のプラットフォーム上のユー
ザーが得ているユーザー体験を macOS 上の人々にも提供するための特別な機能を追加
する必要がある。

簡単のために、この特定のプラットフォームに特化した Vim の機能は "darwin" と呼
ばれる。

この機能は configuration のオプションである。したがって有効か無効かはビルド時
に決定され、一度有効にするよう選択されると組み込まれてしまい、それゆえ実行時に
無効にすることはできない。

この機能は標準で有効になっている。簡単に後述する特別なニーズでもない限り、ほと
んどのユーザーにとってこれは満足のゆくものだろう。

無効にしたい場合は、configure スクリプトに `--disable-darwin` を渡す:
>
    ./configure --disable-darwin <その他のオプション>

その後 Vim をビルドするために `make` を実行する。オプションの順番は関係ない。

実行時に darwin 機能が組み込まれているかどうかを確かめるには
`has('osxdarwin')` を使用することができ、機能が組み込まれている場合には 1 が返
り、それ以外では 0 が返る。後方互換性のため、`osxdarwin` の代わりに `macunix`
もまだ使用することができる。

`--disable-darwin` が有用だと分かった着目すべきケースは次のとおり:

- システムクリップボードの代わりに |x11-selection| を使用したいとき。
- |x11-clientserver| を使用したいとき。

どちらも適切に動作するために X11 のクライアント間通信を利用する必要があり、通
信メカニズムがシステムクリップボードと競合する可能性があるので、実行時に Vim
が停止するのを防ぐため darwin 機能は無効にしておくべきである。


 vim:tw=78:ts=8:noet:ft=help:norl:
